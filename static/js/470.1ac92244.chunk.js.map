{"version":3,"file":"static/js/470.1ac92244.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/MoviesList/MovieItem/MovieItem.module.css?c419","components/MoviesList/MovieItem/MovieItem.jsx","webpack://react-homework-template/./src/components/MoviesList/MovieList.module.css?dfe6","components/MoviesList/MoviesList.jsx","webpack://react-homework-template/./src/components/SearchMovie/SearchMovie.module.css?c852","components/SearchMovie/SearchMovie.jsx","pages/MoviesPage.jsx","services/api/fetchApi.js","services/utils/iconSize.js","services/utils/showError.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"imgWrap\":\"MovieItem_imgWrap__fvd-0\",\"imgMovie\":\"MovieItem_imgMovie__Fyo6d\",\"nameMovie\":\"MovieItem_nameMovie__44I4X\"};","import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport NoImageAvailable from '../../../images/NoImageAvailable.jpg';\nimport css from '../MovieItem/MovieItem.module.css';\n\nexport const MovieItem = ({ id, title, pathSrc }) => {\n  const pathImg = 'https://image.tmdb.org/t/p/w300/';\n  const location = useLocation();\n\n  return (\n    <li className={css.item}>\n      <Link to={`/movies/${id}`} state={{ from: location }}>\n        <div className={css.movieWrap}>\n          <div className={css.imgWrap}>\n            <img\n              src={pathSrc ? `${pathImg}${pathSrc}` : NoImageAvailable}\n              alt={title}\n              className={css.imgMovie}\n              loading=\"lazy\"\n              width=\"395\"\n              height=\"569\"\n            />\n          </div>\n          <h2 className={css.nameMovie}>{title}</h2>\n        </div>\n      </Link>\n    </li>\n  );\n};\nMovieItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  pathSrc: PropTypes.string,\n  title: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MovieList_list__MPHyX\",\"item\":\"MovieList_item__K68oi\"};","import PropTypes from 'prop-types';\n\nimport { MovieItem } from './MovieItem/MovieItem';\nimport css from '../MoviesList/MovieList.module.css';\n\nexport const MoviesList = ({ movies }) => {\n  return (\n    <div>\n      <ul className={css.list}>\n        {movies.map(({ id, original_title, poster_path }) => (\n          <MovieItem\n            key={id}\n            id={id}\n            title={original_title}\n            pathSrc={poster_path}\n          />\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      original_title: PropTypes.string,\n      poster_path: PropTypes.string,\n    }).isRequired\n  ).isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"SearchMovie_wrapper__GsK1q\",\"form\":\"SearchMovie_form__wxS1-\",\"input\":\"SearchMovie_input__3IbmL\",\"btn\":\"SearchMovie_btn__q6DNq\"};","import PropTypes from 'prop-types';\nimport { useState } from 'react';\n\nimport { ImSearch } from 'react-icons/im';\nimport { iconSize } from 'services/utils/iconSize';\n\nimport css from '../SearchMovie/SearchMovie.module.css';\n\nexport const SearchMovie = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  const handleChange = e => {\n    setQuery(e.target.value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (query.trim() === '') {\n      return alert('Enter your regust');\n      // return toast.warn('Enter your regust', {\n      //   theme: 'colored',\n      //   position: 'top-center',\n      // });\n    }\n    onSubmit(query);\n    e.target.reset();\n  };\n\n  return (\n    <div className=\"container\">\n      <form className={css.form} action=\"\" onSubmit={handleSubmit}>\n        <input\n          className={css.input}\n          type=\"text\"\n          name=\"query\"\n          value={query}\n          placeholder=\"Enter your request\"\n          onChange={handleChange}\n          // required\n        />\n\n        <button className={css.btn} type=\"submit\">\n          <ImSearch\n            size={iconSize.md}\n            style={{\n              fill: '#212121',\n            }}\n          />\n        </button>\n      </form>\n    </div>\n  );\n};\n\nSearchMovie.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { Loader } from 'components/Loader/Loader';\n\nimport { SearchMovie } from 'components/SearchMovie/SearchMovie';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { searchMovies } from 'services/api/fetchApi';\nimport { showError } from 'services/utils/showError';\n\nexport const MoviesPage = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [items, setItems] = useState([]);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n    setIsLoading(true);\n    searchMovies(query)\n      .then(({ results }) => {\n        setItems([...results]);\n        if (!results.length) {\n          showMessage();\n          setSearchParams({ query: '' });\n        }\n      })\n      .catch(error => setError(error.message))\n      .finally(() => setIsLoading(false));\n  }, [query, setSearchParams]);\n\n  const handleFormSubmit = query => {\n    setSearchParams({ query: query });\n    setItems([]);\n  };\n\n  const showMessage = query => {\n    return alert('We did not find such movie');\n  };\n  return (\n    <main>\n      {error && showError()}\n      <SearchMovie onSubmit={handleFormSubmit} />\n      {isLoading && <Loader />}\n      <MoviesList movies={items} />\n    </main>\n  );\n};\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '31449444226ba6345698313fe055564a';\n\nconst instance = axios.create({\n  baseURL: BASE_URL,\n  params: {\n    api_key: API_KEY,\n  },\n});\n\nexport const getTrending = async (page = 1) => {\n  const trending_movie = 'trending/movie/day';\n  const response = await instance.get(`${trending_movie}?&page=${page}`);\n\n  return response.data;\n};\n\nexport const getMovieDetails = async movie_id => {\n  const data = await instance.get(`/movie/${movie_id}`);\n\n  return data;\n};\n\nexport const getMovieCredits = async id => {\n  const response = await instance.get(`movie/${id}/credits`);\n\n  return response.data;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await instance.get(`movie/${id}/reviews`);\n\n  return response.data;\n};\n\nexport const searchMovies = async query => {\n  const searchMovie = '/search/movie';\n  const response = await instance.get(\n    `${searchMovie}?&query=${query}&include_adult=false`\n  );\n\n  return response.data;\n};\n","export const iconSize = Object.freeze({\n  sm: 16,\n  md: 24,\n});\n","import { toast } from 'react-toastify';\nexport const showError = () => {\n  toast.error('Somthing wrong. Try again', {\n    theme: 'colored',\n    position: 'top-center',\n  });\n};\n"],"names":["MovieItem","id","title","pathSrc","location","useLocation","className","css","to","state","from","src","NoImageAvailable","alt","loading","width","height","MoviesList","movies","map","original_title","poster_path","SearchMovie","onSubmit","useState","query","setQuery","action","e","preventDefault","trim","alert","target","reset","type","name","value","placeholder","onChange","toLowerCase","size","iconSize","style","fill","MoviesPage","isLoading","setIsLoading","error","setError","items","setItems","useSearchParams","searchParams","setSearchParams","get","useEffect","searchMovies","then","results","length","showMessage","catch","message","finally","showError","Loader","instance","axios","baseURL","params","api_key","getTrending","page","trending_movie","response","data","getMovieDetails","movie_id","getMovieCredits","getMovieReviews","Object","freeze","sm","md","toast","theme","position"],"sourceRoot":""}