{"version":3,"file":"static/js/983.1636a541.chunk.js","mappings":"yMACA,GAAgB,QAAU,2BAA2B,SAAW,4BAA4B,UAAY,8B,SCI3FA,EAAY,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,GAAIC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QAE/BC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,eAAIC,UAAWC,EAAAA,KAAf,UACE,SAAC,KAAD,CAAMC,GAAE,kBAAaP,GAAMQ,MAAO,CAAEC,KAAMN,GAA1C,UACE,iBAAKE,UAAWC,EAAAA,UAAhB,WACE,gBAAKD,UAAWC,EAAAA,QAAhB,UACE,gBACEI,IAAKR,EAAO,UATR,oCASQ,OAAgBA,GAAYS,EACxCC,IAAKX,EACLI,UAAWC,EAAAA,SACXO,QAAQ,OACRC,MAAM,MACNC,OAAO,WAGX,eAAIV,UAAWC,EAAAA,UAAf,SAA+BL,UAKxC,EC3BD,EAAuB,wBCIVe,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC3B,OACE,0BACE,eAAIZ,UAAWC,EAAf,SACGW,EAAOC,KAAI,gBAAGlB,EAAH,EAAGA,GAAImB,EAAP,EAAOA,eAAgBC,EAAvB,EAAuBA,YAAvB,OACV,SAACrB,EAAD,CAEEC,GAAIA,EACJC,MAAOkB,EACPjB,QAASkB,GAHJpB,EAFG,OAWnB,C,wJCXYqB,EAAW,WACtB,OAAkCC,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,IAAnC,eAAOK,EAAP,KAAcC,EAAd,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WACRL,GAAa,IAEbM,EAAAA,EAAAA,MACGC,MAAK,YAAkB,IAAfC,EAAc,EAAdA,QACPJ,GAAS,OAAII,GACd,IACAC,OAAM,SAAAR,GACLC,EAASD,EACV,IACAS,SAAQ,kBAAMV,GAAa,EAAnB,GACZ,GAAE,CAACI,KAGF,2BACE,iBAAKvB,UAAU,YAAf,WACE,eAAIA,UAAU,QAAd,4BACCkB,IAAa,SAAC,IAAD,IACbE,IAASU,EAAAA,EAAAA,MACV,SAAC,IAAD,CAAYlB,OAAQU,QAI3B,C,yLChCKS,E,QAAWC,EAAAA,OAAa,CAC5BC,QAJe,gCAKfC,OAAQ,CACNC,QALY,sCASHV,EAAW,mCAAG,2GAAOW,EAAP,+BAAc,EACjCC,EAAiB,qBADE,SAEFN,EAASO,IAAT,UAAgBD,EAAhB,kBAAwCD,IAFtC,cAEnBG,EAFmB,yBAIlBA,EAASC,MAJS,2CAAH,qDAOXC,EAAe,mCAAG,WAAMC,GAAN,uFACVX,EAASO,IAAT,iBAAuBI,IADb,cACvBF,EADuB,yBAGtBA,GAHsB,2CAAH,sDAMfG,EAAe,mCAAG,WAAMhD,GAAN,uFACNoC,EAASO,IAAT,gBAAsB3C,EAAtB,aADM,cACvB4C,EADuB,yBAGtBA,EAASC,MAHa,2CAAH,sDAMfI,EAAe,mCAAG,WAAMjD,GAAN,uFACNoC,EAASO,IAAT,gBAAsB3C,EAAtB,aADM,cACvB4C,EADuB,yBAGtBA,EAASC,MAHa,2CAAH,sDAMfK,EAAY,mCAAG,WAAMC,GAAN,6EACN,gBADM,SAEHf,EAASO,IAAT,UADH,gBACG,mBACIQ,EADJ,yBAFG,cAEpBP,EAFoB,yBAMnBA,EAASC,MANU,2CAAH,qD,qECpCZV,EAAY,WACvBiB,EAAAA,GAAAA,MAAY,4BAA6B,CACvCC,MAAO,UACPC,SAAU,cAEb,C","sources":["webpack://react-homework-template/./src/components/MoviesList/MovieItem/MovieItem.module.css?c419","components/MoviesList/MovieItem/MovieItem.jsx","webpack://react-homework-template/./src/components/MoviesList/MovieList.module.css?dfe6","components/MoviesList/MoviesList.jsx","pages/HomePage.jsx","services/api/fetchApi.js","services/utils/showError.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"imgWrap\":\"MovieItem_imgWrap__fvd-0\",\"imgMovie\":\"MovieItem_imgMovie__Fyo6d\",\"nameMovie\":\"MovieItem_nameMovie__44I4X\"};","import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport NoImageAvailable from '../../../images/NoImageAvailable.jpg';\nimport css from '../MovieItem/MovieItem.module.css';\n\nexport const MovieItem = ({ id, title, pathSrc }) => {\n  const pathImg = 'https://image.tmdb.org/t/p/w300/';\n  const location = useLocation();\n\n  return (\n    <li className={css.item}>\n      <Link to={`/movies/${id}`} state={{ from: location }}>\n        <div className={css.movieWrap}>\n          <div className={css.imgWrap}>\n            <img\n              src={pathSrc ? `${pathImg}${pathSrc}` : NoImageAvailable}\n              alt={title}\n              className={css.imgMovie}\n              loading=\"lazy\"\n              width=\"395\"\n              height=\"569\"\n            />\n          </div>\n          <h2 className={css.nameMovie}>{title}</h2>\n        </div>\n      </Link>\n    </li>\n  );\n};\nMovieItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  pathSrc: PropTypes.string,\n  title: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MovieList_list__MPHyX\",\"item\":\"MovieList_item__K68oi\"};","import PropTypes from 'prop-types';\n\nimport { MovieItem } from './MovieItem/MovieItem';\nimport css from '../MoviesList/MovieList.module.css';\n\nexport const MoviesList = ({ movies }) => {\n  return (\n    <div>\n      <ul className={css.list}>\n        {movies.map(({ id, original_title, poster_path }) => (\n          <MovieItem\n            key={id}\n            id={id}\n            title={original_title}\n            pathSrc={poster_path}\n          />\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      original_title: PropTypes.string,\n      poster_path: PropTypes.string,\n    }).isRequired\n  ).isRequired,\n};\n","import { useState, useEffect } from 'react';\n\nimport { Loader } from 'components/Loader/Loader';\n\nimport { showError } from 'services/utils/showError';\nimport { getTrending } from 'services/api/fetchApi';\n\nimport { MoviesList } from 'components/MoviesList/MoviesList';\n\nexport const HomePage = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [items, setItems] = useState([]);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getTrending()\n      .then(({ results }) => {\n        setItems([...results]);\n      })\n      .catch(error => {\n        setError(error);\n      })\n      .finally(() => setIsLoading(false));\n  }, [setItems]);\n\n  return (\n    <main>\n      <div className=\"container\">\n        <h1 className=\"title\">Trending today</h1>\n        {isLoading && <Loader />}\n        {error && showError()}\n        <MoviesList movies={items} />\n      </div>\n    </main>\n  );\n};\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '31449444226ba6345698313fe055564a';\n\nconst instance = axios.create({\n  baseURL: BASE_URL,\n  params: {\n    api_key: API_KEY,\n  },\n});\n\nexport const getTrending = async (page = 1) => {\n  const trending_movie = 'trending/movie/day';\n  const response = await instance.get(`${trending_movie}?&page=${page}`);\n\n  return response.data;\n};\n\nexport const getMovieDetails = async movie_id => {\n  const data = await instance.get(`/movie/${movie_id}`);\n\n  return data;\n};\n\nexport const getMovieCredits = async id => {\n  const response = await instance.get(`movie/${id}/credits`);\n\n  return response.data;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await instance.get(`movie/${id}/reviews`);\n\n  return response.data;\n};\n\nexport const searchMovies = async query => {\n  const searchMovie = '/search/movie';\n  const response = await instance.get(\n    `${searchMovie}?&query=${query}&include_adult=false`\n  );\n\n  return response.data;\n};\n","import { toast } from 'react-toastify';\nexport const showError = () => {\n  toast.error('Somthing wrong. Try again', {\n    theme: 'colored',\n    position: 'top-center',\n  });\n};\n"],"names":["MovieItem","id","title","pathSrc","location","useLocation","className","css","to","state","from","src","NoImageAvailable","alt","loading","width","height","MoviesList","movies","map","original_title","poster_path","HomePage","useState","isLoading","setIsLoading","error","setError","items","setItems","useEffect","getTrending","then","results","catch","finally","showError","instance","axios","baseURL","params","api_key","page","trending_movie","get","response","data","getMovieDetails","movie_id","getMovieCredits","getMovieReviews","searchMovies","query","toast","theme","position"],"sourceRoot":""}