{"version":3,"file":"static/js/504.5289f2ad.chunk.js","mappings":"4RACA,GAAgB,OAAS,8BAA8B,QAAU,+BAA+B,QAAU,+BAA+B,MAAQ,6BAA6B,SAAW,gCAAgC,YAAc,mCAAmC,KAAO,4BAA4B,KAAO,6B,SCiIpT,EAjHsB,WAAO,IAAD,EACpBA,GAAWC,EAAAA,EAAAA,MAEXC,GAAO,WADIC,EAAAA,EAAAA,MACKC,aAAT,eAAgBF,OAAQ,UAE7BG,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAAkCE,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAwBJ,EAAAA,EAAAA,UAAS,CAAC,GAAlC,eAAOK,EAAP,KAAaC,EAAb,MAEAC,EAAAA,EAAAA,YAAU,WACRL,GAAa,IAEbM,EAAAA,EAAAA,IAAgBV,GACbW,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACCC,EACND,EADMC,YAAaC,EACnBF,EADmBE,eAAgBC,EACnCH,EADmCG,SAAUC,EAC7CJ,EAD6CI,OAAQC,EACrDL,EADqDK,aAGjDC,EAAcF,EAAOG,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,MACnDC,EAAYC,KAAKC,MAAqB,GAAfR,GAE7BT,EAAQ,CACNK,YAAAA,EACAC,eAAAA,EACAS,UAAAA,EACAR,SAAAA,EACAG,YAAAA,GAEH,IACAQ,OAAM,SAAArB,GACLC,EAASD,EACV,IACAsB,SAAQ,kBAAMvB,GAAa,EAAnB,GACZ,GAAE,CAACJ,EAAIQ,IAER,IACQK,EACNN,EADMM,YAAaC,EACnBP,EADmBO,eAAgBS,EACnChB,EADmCgB,UAAWR,EAC9CR,EAD8CQ,SAAUG,EACxDX,EADwDW,YAG1D,OACE,6BACE,iBAAKU,UAAU,YAAf,WACE,oBAAQC,KAAK,SAASC,QAPb,kBAAMnC,EAASE,EAAf,EAO8B+B,UAAWG,EAAAA,OAAlD,WACE,2BACE,SAAC,MAAD,CACEC,KAAMC,EAAAA,EAAAA,GACNC,MAAO,CACLC,KAAM,eALd,aAYChC,IAAa,SAACiC,EAAA,EAAD,IACb/B,GACCgC,EAAAA,GAAAA,MAAY,4BAA6B,CACvCC,MAAO,UACPC,SAAU,gBAEd,iBAAKX,UAAWG,EAAAA,QAAhB,WACE,gBAAKH,UAAWG,EAAAA,QAAhB,UACE,gBACES,IAAK3B,EAAW,UAzBZ,oCAyBY,OAAgBA,GAAgB4B,EAChDC,IAAK5B,EACL6B,MAAM,MACNC,OAAO,WAGX,4BACE,eAAIhB,UAAWG,EAAAA,MAAf,SAA2BjB,KAC3B,eAAGc,UAAWG,EAAAA,YAAd,yBACeR,EAAYA,EAAY,IAAM,qBAE7C,eAAIK,UAAWG,EAAAA,SAAf,uBACA,cAAGH,UAAWG,EAAAA,YAAd,SACGhB,GAAsB,oBAEzB,eAAIa,UAAWG,EAAAA,SAAf,qBACA,cAAGH,UAAWG,EAAAA,YAAd,SACGb,GAA4B,0BAInC,eAAIU,UAAWG,EAAAA,SAAf,qCACA,gBAAIH,UAAWG,EAAAA,KAAf,WACE,eAAIH,UAAWG,EAAAA,KAAf,UACE,SAAC,KAAD,CACEH,UAAWG,EAAAA,KACXhC,MAAO,CAAEF,KAAAA,GACTgD,GAAE,kBAAa7C,EAAb,SAHJ,qBAQF,eAAI4B,UAAWG,EAAAA,KAAf,UACE,SAAC,KAAD,CACEH,UAAWG,EAAAA,KACXhC,MAAO,CAAEF,KAAAA,GACTgD,GAAE,kBAAa7C,EAAb,YAHJ,2BASJ,SAAC,EAAA8C,SAAD,CAAUC,UAAU,SAACX,EAAA,EAAD,IAApB,UACE,SAAC,KAAD,UAGJ,SAAC,KAAD,MAGL,C,yLC5HKY,E,QAAWC,EAAAA,OAAa,CAC5BC,QAJe,gCAKfC,OAAQ,CACNC,QALY,sCASHC,EAAW,mCAAG,2GAAOC,EAAP,+BAAc,EACjCC,EAAiB,qBADE,SAEFP,EAASQ,IAAT,UAAgBD,EAAhB,kBAAwCD,IAFtC,cAEnBG,EAFmB,yBAIlBA,EAAS7C,MAJS,2CAAH,qDAOXF,EAAe,mCAAG,WAAMgD,GAAN,uFACVV,EAASQ,IAAT,iBAAuBE,IADb,cACvB9C,EADuB,yBAGtBA,GAHsB,2CAAH,sDAMf+C,EAAe,mCAAG,WAAM3D,GAAN,uFACNgD,EAASQ,IAAT,gBAAsBxD,EAAtB,aADM,cACvByD,EADuB,yBAGtBA,EAAS7C,MAHa,2CAAH,sDAMfgD,EAAe,mCAAG,WAAM5D,GAAN,uFACNgD,EAASQ,IAAT,gBAAsBxD,EAAtB,aADM,cACvByD,EADuB,yBAGtBA,EAAS7C,MAHa,2CAAH,sDAMfiD,EAAY,mCAAG,WAAMC,GAAN,6EACN,gBADM,SAEHd,EAASQ,IAAT,UADH,gBACG,mBACIM,EADJ,yBAFG,cAEpBL,EAFoB,yBAMnBA,EAAS7C,MANU,2CAAH,qD,uDCrClB,IAAMqB,EAAW8B,OAAOC,OAAO,CACpCC,GAAI,GACJC,GAAI,I","sources":["webpack://react-homework-template/./src/pages/MovieInfoPage/MovieInfoPage.module.css?6bbe","pages/MovieInfoPage/MovieInfoPage.jsx","services/api/fetchApi.js","services/utils/iconSize.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"button\":\"MovieInfoPage_button__J9ATw\",\"wrapper\":\"MovieInfoPage_wrapper__piRH8\",\"imgWrap\":\"MovieInfoPage_imgWrap__xow-a\",\"title\":\"MovieInfoPage_title__Na5nb\",\"subtitle\":\"MovieInfoPage_subtitle__HZxht\",\"description\":\"MovieInfoPage_description__33JKf\",\"list\":\"MovieInfoPage_list__N0pSG\",\"link\":\"MovieInfoPage_link__KSL-E\"};","import { useState, useEffect, Suspense } from 'react';\nimport {\n  NavLink,\n  Outlet,\n  useNavigate,\n  useParams,\n  useLocation,\n} from 'react-router-dom';\n\nimport { Loader } from 'components/Loader/Loader';\nimport { ToastContainer, toast } from 'react-toastify';\nimport NoImageAvailable from '../../images/NoImageAvailable.jpg';\nimport { getMovieDetails } from 'services/api/fetchApi';\nimport { BsArrowLeftShort } from 'react-icons/bs';\nimport { iconSize } from 'services/utils/iconSize';\nimport css from '../MovieInfoPage/MovieInfoPage.module.css';\n\nconst MovieInfoPage = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const from = location.state?.from || '/movies';\n\n  const { id } = useParams();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [item, setItem] = useState({});\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getMovieDetails(id)\n      .then(({ data }) => {\n        const { poster_path, original_title, overview, genres, vote_average } =\n          data;\n\n        const genresMovie = genres.map(genre => genre.name).join(', ');\n        const userScore = Math.round(vote_average * 10);\n\n        setItem({\n          poster_path,\n          original_title,\n          userScore,\n          overview,\n          genresMovie,\n        });\n      })\n      .catch(error => {\n        setError(error);\n      })\n      .finally(() => setIsLoading(false));\n  }, [id, setItem]);\n\n  const GoBack = () => navigate(from);\n  const { poster_path, original_title, userScore, overview, genresMovie } =\n    item;\n  const pathImg = 'https://image.tmdb.org/t/p/w300/';\n  return (\n    <main>\n      <div className=\"container\">\n        <button type=\"button\" onClick={GoBack} className={css.button}>\n          <span>\n            <BsArrowLeftShort\n              size={iconSize.sm}\n              style={{\n                fill: 'inherit',\n              }}\n            />\n          </span>\n          Go back\n        </button>\n\n        {isLoading && <Loader />}\n        {error &&\n          toast.error('Somthing wrong. Try again', {\n            theme: 'colored',\n            position: 'top-center',\n          })}\n        <div className={css.wrapper}>\n          <div className={css.imgWrap}>\n            <img\n              src={poster_path ? `${pathImg}${poster_path}` : NoImageAvailable}\n              alt={original_title}\n              width=\"300\"\n              height=\"400\"\n            />\n          </div>\n          <div>\n            <h2 className={css.title}>{original_title}</h2>\n            <p className={css.description}>\n              User Score: {userScore ? userScore + '%' : 'no information'}\n            </p>\n            <h3 className={css.subtitle}>Overview</h3>\n            <p className={css.description}>\n              {overview ? overview : 'no information'}\n            </p>\n            <h3 className={css.subtitle}>Genres</h3>\n            <p className={css.description}>\n              {genresMovie ? genresMovie : 'no information'}\n            </p>\n          </div>\n        </div>\n        <h3 className={css.subtitle}>Additional information</h3>\n        <ul className={css.list}>\n          <li className={css.item}>\n            <NavLink\n              className={css.link}\n              state={{ from }}\n              to={`/movies/${id}/cast`}\n            >\n              Cast\n            </NavLink>\n          </li>\n          <li className={css.item}>\n            <NavLink\n              className={css.link}\n              state={{ from }}\n              to={`/movies/${id}/reviews`}\n            >\n              Reviews\n            </NavLink>\n          </li>\n        </ul>\n        <Suspense fallback={<Loader />}>\n          <Outlet />\n        </Suspense>\n      </div>\n      <ToastContainer />\n    </main>\n  );\n};\nexport default MovieInfoPage;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '31449444226ba6345698313fe055564a';\n\nconst instance = axios.create({\n  baseURL: BASE_URL,\n  params: {\n    api_key: API_KEY,\n  },\n});\n\nexport const getTrending = async (page = 1) => {\n  const trending_movie = 'trending/movie/day';\n  const response = await instance.get(`${trending_movie}?&page=${page}`);\n\n  return response.data;\n};\n\nexport const getMovieDetails = async movie_id => {\n  const data = await instance.get(`/movie/${movie_id}`);\n\n  return data;\n};\n\nexport const getMovieCredits = async id => {\n  const response = await instance.get(`movie/${id}/credits`);\n\n  return response.data;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await instance.get(`movie/${id}/reviews`);\n\n  return response.data;\n};\n\nexport const searchMovies = async query => {\n  const searchMovie = '/search/movie';\n  const response = await instance.get(\n    `${searchMovie}?&query=${query}&include_adult=false`\n  );\n\n  return response.data;\n};\n","export const iconSize = Object.freeze({\n  sm: 16,\n  md: 24,\n});\n"],"names":["navigate","useNavigate","from","useLocation","state","id","useParams","useState","isLoading","setIsLoading","error","setError","item","setItem","useEffect","getMovieDetails","then","data","poster_path","original_title","overview","genres","vote_average","genresMovie","map","genre","name","join","userScore","Math","round","catch","finally","className","type","onClick","css","size","iconSize","style","fill","Loader","toast","theme","position","src","NoImageAvailable","alt","width","height","to","Suspense","fallback","instance","axios","baseURL","params","api_key","getTrending","page","trending_movie","get","response","movie_id","getMovieCredits","getMovieReviews","searchMovies","query","Object","freeze","sm","md"],"sourceRoot":""}