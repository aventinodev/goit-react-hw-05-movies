{"version":3,"file":"static/js/76.85cc7631.chunk.js","mappings":"mPACA,GAAgB,KAAO,mBAAmB,QAAU,sBAAsB,KAAO,oB,mBCgEjF,EAvDa,WACX,IAAQA,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAAkCE,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAwBJ,EAAAA,EAAAA,UAAS,IAAjC,eAAOK,EAAP,KAAaC,EAAb,MAEAC,EAAAA,EAAAA,YAAU,WACRL,GAAa,IACbM,EAAAA,EAAAA,IAAgBV,GACbW,MAAK,YAAe,IAAZJ,EAAW,EAAXA,KACPC,GAAQ,OAAID,GACb,IACAK,OAAM,SAAAP,GAAK,OAAIC,EAASD,EAAb,IACXQ,QAAQT,GAAa,GACzB,GAAE,CAACJ,IAGJ,OACE,gCACGG,IAAa,SAACW,EAAA,EAAD,IACbT,GAASU,MAAM,6BAGbR,EAAKS,QAGJ,eAAIC,UAAWC,EAAAA,KAAf,SACGX,EAAKY,KAAI,gBAAGnB,EAAH,EAAGA,GAAIoB,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,cAAeC,EAApC,EAAoCA,UAApC,OACR,gBAAaL,UAAWC,EAAAA,KAAxB,WACE,gBAAKD,UAAWC,EAAAA,QAAhB,UACE,gBACEK,IACEH,EAAY,UAjBhB,oCAiBgB,OACKA,GACbI,EAENC,IAAKJ,EACLK,MAAM,WAGV,cAAGT,UAAWC,EAAAA,KAAd,SAAyBG,KACzB,eAAGJ,UAAWC,EAAAA,KAAd,wBAAoCI,OAb7BtB,EADD,OAHZ,4CA2BT,C,yLCxDK2B,E,QAAWC,EAAAA,OAAa,CAC5BC,QAJe,gCAKfC,OAAQ,CACNC,QALY,sCASHC,EAAW,mCAAG,2GAAOC,EAAP,+BAAc,EACjCC,EAAiB,qBADE,SAEFP,EAASQ,IAAT,UAAgBD,EAAhB,kBAAwCD,IAFtC,cAEnBG,EAFmB,yBAIlBA,EAASC,MAJS,2CAAH,qDAOXC,EAAe,mCAAG,WAAMC,GAAN,uFACVZ,EAASQ,IAAT,iBAAuBI,IADb,cACvBF,EADuB,yBAGtBA,GAHsB,2CAAH,sDAMf3B,EAAe,mCAAG,WAAMV,GAAN,uFACN2B,EAASQ,IAAT,gBAAsBnC,EAAtB,aADM,cACvBoC,EADuB,yBAGtBA,EAASC,MAHa,2CAAH,sDAMfG,EAAe,mCAAG,WAAMxC,GAAN,uFACN2B,EAASQ,IAAT,gBAAsBnC,EAAtB,aADM,cACvBoC,EADuB,yBAGtBA,EAASC,MAHa,2CAAH,sDAMfI,EAAY,mCAAG,WAAMC,GAAN,6EACN,gBADM,SAEHf,EAASQ,IAAT,UADH,gBACG,mBACIO,EADJ,yBAFG,cAEpBN,EAFoB,yBAMnBA,EAASC,MANU,2CAAH,qD","sources":["webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","services/api/fetchApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Cast_list__GlWio\",\"imgWrap\":\"Cast_imgWrap__8YrDq\",\"text\":\"Cast_text__P2vgu\"};","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCredits } from 'services/api/fetchApi';\n\nimport NoImageAvailable from '../../images/NoImageAvailable.jpg';\nimport css from 'components/Cast/Cast.module.css';\n\nimport { Loader } from 'components/Loader/Loader';\n\nconst Cast = () => {\n  const { id } = useParams();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    setIsLoading(true);\n    getMovieCredits(id)\n      .then(({ cast }) => {\n        setCast([...cast]);\n      })\n      .catch(error => setError(error))\n      .finally(setIsLoading(false));\n  }, [id]);\n  const pathImg = 'https://image.tmdb.org/t/p/w300/';\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {error && alert('Somthing wrong. Try again')}\n\n      {\n        !cast.length ? (\n          <p>No information</p>\n        ) : (\n          <ul className={css.list}>\n            {cast.map(({ id, profile_path, original_name, character }) => (\n              <li key={id} className={css.item}>\n                <div className={css.imgWrap}>\n                  <img\n                    src={\n                      profile_path\n                        ? `${pathImg}${profile_path}`\n                        : NoImageAvailable\n                    }\n                    alt={original_name}\n                    width=\"200\"\n                  />\n                </div>\n                <p className={css.text}>{original_name}</p>\n                <p className={css.text}>Character: {character}</p>\n              </li>\n            ))}\n          </ul>\n        )\n\n        //   <p className={css.text}>No information</p>\n      }\n    </>\n  );\n};\nCast.propTypes = {\n  id: PropTypes.number.isRequired,\n};\nexport default Cast;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '31449444226ba6345698313fe055564a';\n\nconst instance = axios.create({\n  baseURL: BASE_URL,\n  params: {\n    api_key: API_KEY,\n  },\n});\n\nexport const getTrending = async (page = 1) => {\n  const trending_movie = 'trending/movie/day';\n  const response = await instance.get(`${trending_movie}?&page=${page}`);\n\n  return response.data;\n};\n\nexport const getMovieDetails = async movie_id => {\n  const data = await instance.get(`/movie/${movie_id}`);\n\n  return data;\n};\n\nexport const getMovieCredits = async id => {\n  const response = await instance.get(`movie/${id}/credits`);\n\n  return response.data;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await instance.get(`movie/${id}/reviews`);\n\n  return response.data;\n};\n\nexport const searchMovies = async query => {\n  const searchMovie = '/search/movie';\n  const response = await instance.get(\n    `${searchMovie}?&query=${query}&include_adult=false`\n  );\n\n  return response.data;\n};\n"],"names":["id","useParams","useState","isLoading","setIsLoading","error","setError","cast","setCast","useEffect","getMovieCredits","then","catch","finally","Loader","alert","length","className","css","map","profile_path","original_name","character","src","NoImageAvailable","alt","width","instance","axios","baseURL","params","api_key","getTrending","page","trending_movie","get","response","data","getMovieDetails","movie_id","getMovieReviews","searchMovies","query"],"sourceRoot":""}